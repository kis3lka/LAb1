// ConsoleApplication2.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//
#include <iostream>
#include <string>
using namespace std;

int main()
{
	setlocale(LC_ALL, "Russian");
	std::cout << "Задание №1" << std::endl;
	const int N = 10;
	int a[N] = { 1,2,3,4,5,6,7,8,9,10 };
	// Замена четных числа на 0
	for (int i = 0; i < N; i++)
	{
		std::cout << a[i] << " ";
		if (a[i] % 2 == 0)
			a[i] = 0;
	}
	std::cout << std::endl << "Исправленный массив: ";
	// Вывод исправленного массива
	for (int i = 0; i < N; i++)
	{
		std::cout << a[i];
	}
	std::cout << std::endl;
	std::cout << "Задание №2" << std::endl;
	string Symbol;
	string Stroka;
	bool con;
	do {
		std::cout << "Введите символ с клавиатуры: ";
		std::cin >> Symbol;
		if (Symbol.length() != 1) {
			con = false;
			continue;
		}
		int c = (int)Symbol[0];
		con = (c >= 48 && c <= 57) || (c >= 65 && c <= 90) || (c >= 97 && c <= 122); // ввод с проверкой
	} while (!con);
	do {
		std::cout << "Введите строку: ";
		std::cin >> Stroka;
		if (Stroka.length() > 1) {
			con = true;
		}
		else {
			con = false;
			continue;
		}
	} while (!con);
	int pos = (int)Stroka.find(Symbol);
	if (pos != -1) {
		std::cout << "Символ " << Symbol << " занимает " << pos << " позицию!"; // если символ найден
	}
	else {
		std::cout << "Символ отсутствует в строке!"; // если символ не найден
	}
	std::cout << std::endl;
	std::cout << "Задание №3" << std::endl;
	int m[3][3];
	// Заполнение матрицы
	for (int s = 0; s < 3; s++)
	{
		for (int k = 0; k < 3; k++)
		{
			std::cout << "m" << s + 1 << k + 1 << " :";
			std::cin >> m[s][k];
		}
	}
	// Вычисление определителя матрицы по формуле
	int det = (m[0][0] * m[1][1] * m[2][2] + m[0][1] * m[1][2] * m[2][0] + m[0][2] * m[1][0] * m[2][1] - m[0][2] * m[1][1] * m[2][0] - m[0][0] * m[1][2] * m[2][1] - m[0][1] * m[1][0] * m[2][2]);
	// Вывод определителя матрицы
	std::cout << "Определитель = " << det;
	system("pause");
	return 0;

}






// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
